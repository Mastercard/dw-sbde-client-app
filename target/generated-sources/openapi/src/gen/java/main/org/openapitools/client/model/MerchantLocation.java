/*
 * Small Business Decision Enhancer API
 * API for retrieving small business performance metrics such as daily, weekly, monthly and yearly metrics. These metrics detail information such as the number of transactions, amount spent and the breakdown of types of transactions at these locations.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

/**
 * Available information about this location such as the name, address and contact details.
 */
@ApiModel(description = "Available information about this location such as the name, address and contact details.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-13T09:17:31.952+01:00[Europe/London]")
public class MerchantLocation {
  public static final String SERIALIZED_NAME_MERCHANT_LOCATION_ID = "merchantLocationId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_LOCATION_ID)
  private Long merchantLocationId;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_CLEANSED_MERCHANT_NAME = "cleansedMerchantName";
  @SerializedName(SERIALIZED_NAME_CLEANSED_MERCHANT_NAME)
  private String cleansedMerchantName;

  public static final String SERIALIZED_NAME_STREET_ADDR = "streetAddr";
  @SerializedName(SERIALIZED_NAME_STREET_ADDR)
  private String streetAddr;

  public static final String SERIALIZED_NAME_CLEANSED_STREET_ADDR = "cleansedStreetAddr";
  @SerializedName(SERIALIZED_NAME_CLEANSED_STREET_ADDR)
  private String cleansedStreetAddr;

  public static final String SERIALIZED_NAME_CITY_NAME = "cityName";
  @SerializedName(SERIALIZED_NAME_CITY_NAME)
  private String cityName;

  public static final String SERIALIZED_NAME_CLEANSED_CITY_NAME = "cleansedCityName";
  @SerializedName(SERIALIZED_NAME_CLEANSED_CITY_NAME)
  private String cleansedCityName;

  public static final String SERIALIZED_NAME_STATE_NAME = "stateName";
  @SerializedName(SERIALIZED_NAME_STATE_NAME)
  private String stateName;

  public static final String SERIALIZED_NAME_CLEANSED_STATE_NAME = "cleansedStateName";
  @SerializedName(SERIALIZED_NAME_CLEANSED_STATE_NAME)
  private String cleansedStateName;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_CLEANSED_POSTAL_CODE = "cleansedPostalCode";
  @SerializedName(SERIALIZED_NAME_CLEANSED_POSTAL_CODE)
  private String cleansedPostalCode;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CLEANSED_COUNTRY_CODE = "cleansedCountryCode";
  @SerializedName(SERIALIZED_NAME_CLEANSED_COUNTRY_CODE)
  private String cleansedCountryCode;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_CLEANSED_PHONE_NUMBER = "cleansedPhoneNumber";
  @SerializedName(SERIALIZED_NAME_CLEANSED_PHONE_NUMBER)
  private String cleansedPhoneNumber;

  public static final String SERIALIZED_NAME_MCC_CODE = "mccCode";
  @SerializedName(SERIALIZED_NAME_MCC_CODE)
  private String mccCode;

  public static final String SERIALIZED_NAME_LEGAL_CORPORATE_NAME = "legalCorporateName";
  @SerializedName(SERIALIZED_NAME_LEGAL_CORPORATE_NAME)
  private String legalCorporateName;

  public static final String SERIALIZED_NAME_CLEANSED_LEGAL_CORPORATE_NAME = "cleansedLegalCorporateName";
  @SerializedName(SERIALIZED_NAME_CLEANSED_LEGAL_CORPORATE_NAME)
  private String cleansedLegalCorporateName;

  public static final String SERIALIZED_NAME_INDUSTRY = "industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private String industry;

  public static final String SERIALIZED_NAME_SUPER_INDUSTRY = "superIndustry";
  @SerializedName(SERIALIZED_NAME_SUPER_INDUSTRY)
  private String superIndustry;

  public static final String SERIALIZED_NAME_DUN_AND_BRADSTREET_NUMBER = "dunAndBradstreetNumber";
  @SerializedName(SERIALIZED_NAME_DUN_AND_BRADSTREET_NUMBER)
  private String dunAndBradstreetNumber;

  public static final String SERIALIZED_NAME_DATE_ESTABLISHED = "dateEstablished";
  @SerializedName(SERIALIZED_NAME_DATE_ESTABLISHED)
  private LocalDate dateEstablished;

  public static final String SERIALIZED_NAME_TERMINATION_DATE_WITH_M_C = "terminationDateWithMC";
  @SerializedName(SERIALIZED_NAME_TERMINATION_DATE_WITH_M_C)
  private LocalDate terminationDateWithMC;

  public static final String SERIALIZED_NAME_NEW_BUSINESS_FLAG = "newBusinessFlag";
  @SerializedName(SERIALIZED_NAME_NEW_BUSINESS_FLAG)
  private Boolean newBusinessFlag;

  public static final String SERIALIZED_NAME_AGGREGATE_MERCHANT_ID = "aggregateMerchantId";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_MERCHANT_ID)
  private Long aggregateMerchantId;

  public static final String SERIALIZED_NAME_AGGREGATE_MERCHANT_NAME = "aggregateMerchantName";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_MERCHANT_NAME)
  private String aggregateMerchantName;

  public static final String SERIALIZED_NAME_KEY_AGGREGATE_MERCHANT_I_D = "keyAggregateMerchantID";
  @SerializedName(SERIALIZED_NAME_KEY_AGGREGATE_MERCHANT_I_D)
  private Long keyAggregateMerchantID;

  public static final String SERIALIZED_NAME_PARENT_AGGREGATE_MERCHANT_ID = "parentAggregateMerchantId";
  @SerializedName(SERIALIZED_NAME_PARENT_AGGREGATE_MERCHANT_ID)
  private String parentAggregateMerchantId;

  public static final String SERIALIZED_NAME_PARENT_AGGREGATE_MERCHANT_NAME = "parentAggregateMerchantName";
  @SerializedName(SERIALIZED_NAME_PARENT_AGGREGATE_MERCHANT_NAME)
  private String parentAggregateMerchantName;

  public static final String SERIALIZED_NAME_NAICS_CODE = "naicsCode";
  @SerializedName(SERIALIZED_NAME_NAICS_CODE)
  private String naicsCode;

  public static final String SERIALIZED_NAME_LOCAL_FAVORITE = "localFavorite";
  @SerializedName(SERIALIZED_NAME_LOCAL_FAVORITE)
  private Boolean localFavorite;

  public static final String SERIALIZED_NAME_HIDDEN_GEME = "hiddenGeme";
  @SerializedName(SERIALIZED_NAME_HIDDEN_GEME)
  private Boolean hiddenGeme;

  public static final String SERIALIZED_NAME_TRANSACTION_VOLUME_RANK = "transactionVolumeRank";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_VOLUME_RANK)
  private Integer transactionVolumeRank;

  public static final String SERIALIZED_NAME_AVG_TICKET_SIZE_RANK = "avgTicketSizeRank";
  @SerializedName(SERIALIZED_NAME_AVG_TICKET_SIZE_RANK)
  private Integer avgTicketSizeRank;

  public MerchantLocation merchantLocationId(Long merchantLocationId) {
    this.merchantLocationId = merchantLocationId;
    return this;
  }

   /**
   * Merchant Market Hierarchy ID, used as a matching key
   * @return merchantLocationId
  **/
  @ApiModelProperty(example = "123456789", required = true, value = "Merchant Market Hierarchy ID, used as a matching key")
  public Long getMerchantLocationId() {
    return merchantLocationId;
  }

  public void setMerchantLocationId(Long merchantLocationId) {
    this.merchantLocationId = merchantLocationId;
  }

  public MerchantLocation merchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

   /**
   * Scrubbed merchant name from transaction clearing data
   * @return merchantName
  **/
  @ApiModelProperty(example = "ACME CORP. #1234", value = "Scrubbed merchant name from transaction clearing data")
  public String getMerchantName() {
    return merchantName;
  }

  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }

  public MerchantLocation cleansedMerchantName(String cleansedMerchantName) {
    this.cleansedMerchantName = cleansedMerchantName;
    return this;
  }

   /**
   * Cleansed name (after cleansing and third-party data validation process)
   * @return cleansedMerchantName
  **/
  @ApiModelProperty(example = "ACME CORPORATION # 1234", value = "Cleansed name (after cleansing and third-party data validation process)")
  public String getCleansedMerchantName() {
    return cleansedMerchantName;
  }

  public void setCleansedMerchantName(String cleansedMerchantName) {
    this.cleansedMerchantName = cleansedMerchantName;
  }

  public MerchantLocation streetAddr(String streetAddr) {
    this.streetAddr = streetAddr;
    return this;
  }

   /**
   * Scrubbed merchant address from transaction clearing data
   * @return streetAddr
  **/
  @ApiModelProperty(example = "10 ROAD RUNNER AVE.", value = "Scrubbed merchant address from transaction clearing data")
  public String getStreetAddr() {
    return streetAddr;
  }

  public void setStreetAddr(String streetAddr) {
    this.streetAddr = streetAddr;
  }

  public MerchantLocation cleansedStreetAddr(String cleansedStreetAddr) {
    this.cleansedStreetAddr = cleansedStreetAddr;
    return this;
  }

   /**
   * Cleansed address (after cleansing and third-party data validation process)
   * @return cleansedStreetAddr
  **/
  @ApiModelProperty(example = "10 ROAD RUNNER AVENUE", value = "Cleansed address (after cleansing and third-party data validation process)")
  public String getCleansedStreetAddr() {
    return cleansedStreetAddr;
  }

  public void setCleansedStreetAddr(String cleansedStreetAddr) {
    this.cleansedStreetAddr = cleansedStreetAddr;
  }

  public MerchantLocation cityName(String cityName) {
    this.cityName = cityName;
    return this;
  }

   /**
   * Scrubbed merchant city from transaction clearing data
   * @return cityName
  **/
  @ApiModelProperty(example = "BIRDVILLE", value = "Scrubbed merchant city from transaction clearing data")
  public String getCityName() {
    return cityName;
  }

  public void setCityName(String cityName) {
    this.cityName = cityName;
  }

  public MerchantLocation cleansedCityName(String cleansedCityName) {
    this.cleansedCityName = cleansedCityName;
    return this;
  }

   /**
   * Cleansed city name (after cleansing and third-party data validation process)
   * @return cleansedCityName
  **/
  @ApiModelProperty(example = "BIRDVILLE", value = "Cleansed city name (after cleansing and third-party data validation process)")
  public String getCleansedCityName() {
    return cleansedCityName;
  }

  public void setCleansedCityName(String cleansedCityName) {
    this.cleansedCityName = cleansedCityName;
  }

  public MerchantLocation stateName(String stateName) {
    this.stateName = stateName;
    return this;
  }

   /**
   * Scrubbed merchant state/county from transaction clearing data
   * @return stateName
  **/
  @ApiModelProperty(example = "AZ", value = "Scrubbed merchant state/county from transaction clearing data")
  public String getStateName() {
    return stateName;
  }

  public void setStateName(String stateName) {
    this.stateName = stateName;
  }

  public MerchantLocation cleansedStateName(String cleansedStateName) {
    this.cleansedStateName = cleansedStateName;
    return this;
  }

   /**
   * Cleansed state/county (after cleansing and third-party data validation process)
   * @return cleansedStateName
  **/
  @ApiModelProperty(example = "AZ", value = "Cleansed state/county (after cleansing and third-party data validation process)")
  public String getCleansedStateName() {
    return cleansedStateName;
  }

  public void setCleansedStateName(String cleansedStateName) {
    this.cleansedStateName = cleansedStateName;
  }

  public MerchantLocation postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Scrubbed merchant postal/ZIP code from transaction clearing data
   * @return postalCode
  **/
  @ApiModelProperty(example = "65543", value = "Scrubbed merchant postal/ZIP code from transaction clearing data")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public MerchantLocation cleansedPostalCode(String cleansedPostalCode) {
    this.cleansedPostalCode = cleansedPostalCode;
    return this;
  }

   /**
   * Cleansed postal/ZIP code (after cleansing and third-party data validation process)
   * @return cleansedPostalCode
  **/
  @ApiModelProperty(example = "65543", value = "Cleansed postal/ZIP code (after cleansing and third-party data validation process)")
  public String getCleansedPostalCode() {
    return cleansedPostalCode;
  }

  public void setCleansedPostalCode(String cleansedPostalCode) {
    this.cleansedPostalCode = cleansedPostalCode;
  }

  public MerchantLocation countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Scrubbed merchant country code from transaction clearing data
   * @return countryCode
  **/
  @ApiModelProperty(example = "USA", required = true, value = "Scrubbed merchant country code from transaction clearing data")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public MerchantLocation cleansedCountryCode(String cleansedCountryCode) {
    this.cleansedCountryCode = cleansedCountryCode;
    return this;
  }

   /**
   * Cleansed country code (after cleansing and third-party data validation process)
   * @return cleansedCountryCode
  **/
  @ApiModelProperty(example = "USA", value = "Cleansed country code (after cleansing and third-party data validation process)")
  public String getCleansedCountryCode() {
    return cleansedCountryCode;
  }

  public void setCleansedCountryCode(String cleansedCountryCode) {
    this.cleansedCountryCode = cleansedCountryCode;
  }

  public MerchantLocation phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The Merchant phone number after it has been cleaned via matches to third party data
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "9995551234", value = "The Merchant phone number after it has been cleaned via matches to third party data")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public MerchantLocation cleansedPhoneNumber(String cleansedPhoneNumber) {
    this.cleansedPhoneNumber = cleansedPhoneNumber;
    return this;
  }

   /**
   * Cleansed telephone number (after cleansing and third-party data validation process)
   * @return cleansedPhoneNumber
  **/
  @ApiModelProperty(example = "9995551234", value = "Cleansed telephone number (after cleansing and third-party data validation process)")
  public String getCleansedPhoneNumber() {
    return cleansedPhoneNumber;
  }

  public void setCleansedPhoneNumber(String cleansedPhoneNumber) {
    this.cleansedPhoneNumber = cleansedPhoneNumber;
  }

  public MerchantLocation mccCode(String mccCode) {
    this.mccCode = mccCode;
    return this;
  }

   /**
   * Merchant Category Code as reported in the transaction clearing record.
   * @return mccCode
  **/
  @ApiModelProperty(example = "5661", value = "Merchant Category Code as reported in the transaction clearing record.")
  public String getMccCode() {
    return mccCode;
  }

  public void setMccCode(String mccCode) {
    this.mccCode = mccCode;
  }

  public MerchantLocation legalCorporateName(String legalCorporateName) {
    this.legalCorporateName = legalCorporateName;
    return this;
  }

   /**
   * The merchant legal name as it appears in the clearing record
   * @return legalCorporateName
  **/
  @ApiModelProperty(example = "ACME CORP", value = "The merchant legal name as it appears in the clearing record")
  public String getLegalCorporateName() {
    return legalCorporateName;
  }

  public void setLegalCorporateName(String legalCorporateName) {
    this.legalCorporateName = legalCorporateName;
  }

  public MerchantLocation cleansedLegalCorporateName(String cleansedLegalCorporateName) {
    this.cleansedLegalCorporateName = cleansedLegalCorporateName;
    return this;
  }

   /**
   * The merchant legal name as it appears after it has been cleaned via matches to third party data
   * @return cleansedLegalCorporateName
  **/
  @ApiModelProperty(example = "ACME CORPORATION", value = "The merchant legal name as it appears after it has been cleaned via matches to third party data")
  public String getCleansedLegalCorporateName() {
    return cleansedLegalCorporateName;
  }

  public void setCleansedLegalCorporateName(String cleansedLegalCorporateName) {
    this.cleansedLegalCorporateName = cleansedLegalCorporateName;
  }

  public MerchantLocation industry(String industry) {
    this.industry = industry;
    return this;
  }

   /**
   * MasterCard-defined grouping of Merchant Category Codes  - Approx. 100 categories
   * @return industry
  **/
  @ApiModelProperty(example = "SHS", value = "MasterCard-defined grouping of Merchant Category Codes  - Approx. 100 categories")
  public String getIndustry() {
    return industry;
  }

  public void setIndustry(String industry) {
    this.industry = industry;
  }

  public MerchantLocation superIndustry(String superIndustry) {
    this.superIndustry = superIndustry;
    return this;
  }

   /**
   * MasterCard-defined grouping of Merchant Category Codes  - Approx. 30 categories
   * @return superIndustry
  **/
  @ApiModelProperty(example = "APP", value = "MasterCard-defined grouping of Merchant Category Codes  - Approx. 30 categories")
  public String getSuperIndustry() {
    return superIndustry;
  }

  public void setSuperIndustry(String superIndustry) {
    this.superIndustry = superIndustry;
  }

  public MerchantLocation dunAndBradstreetNumber(String dunAndBradstreetNumber) {
    this.dunAndBradstreetNumber = dunAndBradstreetNumber;
    return this;
  }

   /**
   * Dun and Bradstreet number for Merchant
   * @return dunAndBradstreetNumber
  **/
  @ApiModelProperty(example = "123456789", value = "Dun and Bradstreet number for Merchant")
  public String getDunAndBradstreetNumber() {
    return dunAndBradstreetNumber;
  }

  public void setDunAndBradstreetNumber(String dunAndBradstreetNumber) {
    this.dunAndBradstreetNumber = dunAndBradstreetNumber;
  }

  public MerchantLocation dateEstablished(LocalDate dateEstablished) {
    this.dateEstablished = dateEstablished;
    return this;
  }

   /**
   * First date of transaction seen at merchant in ISO8601 format
   * @return dateEstablished
  **/
  @ApiModelProperty(value = "First date of transaction seen at merchant in ISO8601 format")
  public LocalDate getDateEstablished() {
    return dateEstablished;
  }

  public void setDateEstablished(LocalDate dateEstablished) {
    this.dateEstablished = dateEstablished;
  }

  public MerchantLocation terminationDateWithMC(LocalDate terminationDateWithMC) {
    this.terminationDateWithMC = terminationDateWithMC;
    return this;
  }

   /**
   * Date of last transaction seen at merchant as of report date in ISO8601 format
   * @return terminationDateWithMC
  **/
  @ApiModelProperty(value = "Date of last transaction seen at merchant as of report date in ISO8601 format")
  public LocalDate getTerminationDateWithMC() {
    return terminationDateWithMC;
  }

  public void setTerminationDateWithMC(LocalDate terminationDateWithMC) {
    this.terminationDateWithMC = terminationDateWithMC;
  }

  public MerchantLocation newBusinessFlag(Boolean newBusinessFlag) {
    this.newBusinessFlag = newBusinessFlag;
    return this;
  }

   /**
   * Indicates whether the location is a &#39;new business&#39; based on the presence of a first transaction in the preceding 30 days.
   * @return newBusinessFlag
  **/
  @ApiModelProperty(value = "Indicates whether the location is a 'new business' based on the presence of a first transaction in the preceding 30 days.")
  public Boolean getNewBusinessFlag() {
    return newBusinessFlag;
  }

  public void setNewBusinessFlag(Boolean newBusinessFlag) {
    this.newBusinessFlag = newBusinessFlag;
  }

  public MerchantLocation aggregateMerchantId(Long aggregateMerchantId) {
    this.aggregateMerchantId = aggregateMerchantId;
    return this;
  }

   /**
   * Merchant Aggregate ID groups merchant locations by chain.  First level of aggregation.
   * @return aggregateMerchantId
  **/
  @ApiModelProperty(example = "5999", value = "Merchant Aggregate ID groups merchant locations by chain.  First level of aggregation.")
  public Long getAggregateMerchantId() {
    return aggregateMerchantId;
  }

  public void setAggregateMerchantId(Long aggregateMerchantId) {
    this.aggregateMerchantId = aggregateMerchantId;
  }

  public MerchantLocation aggregateMerchantName(String aggregateMerchantName) {
    this.aggregateMerchantName = aggregateMerchantName;
    return this;
  }

   /**
   * Name of the Merchant Aggregate chain
   * @return aggregateMerchantName
  **/
  @ApiModelProperty(example = "NON-AGGREGATED MISCELLANEOUS AND SPECIALTY RETAIL STORES 5999", value = "Name of the Merchant Aggregate chain")
  public String getAggregateMerchantName() {
    return aggregateMerchantName;
  }

  public void setAggregateMerchantName(String aggregateMerchantName) {
    this.aggregateMerchantName = aggregateMerchantName;
  }

  public MerchantLocation keyAggregateMerchantID(Long keyAggregateMerchantID) {
    this.keyAggregateMerchantID = keyAggregateMerchantID;
    return this;
  }

   /**
   * Joins together different channels under the same chain. Second level of aggregation.
   * @return keyAggregateMerchantID
  **/
  @ApiModelProperty(value = "Joins together different channels under the same chain. Second level of aggregation.")
  public Long getKeyAggregateMerchantID() {
    return keyAggregateMerchantID;
  }

  public void setKeyAggregateMerchantID(Long keyAggregateMerchantID) {
    this.keyAggregateMerchantID = keyAggregateMerchantID;
  }

  public MerchantLocation parentAggregateMerchantId(String parentAggregateMerchantId) {
    this.parentAggregateMerchantId = parentAggregateMerchantId;
    return this;
  }

   /**
   * ID Code of the Parent Aggregate
   * @return parentAggregateMerchantId
  **/
  @ApiModelProperty(value = "ID Code of the Parent Aggregate")
  public String getParentAggregateMerchantId() {
    return parentAggregateMerchantId;
  }

  public void setParentAggregateMerchantId(String parentAggregateMerchantId) {
    this.parentAggregateMerchantId = parentAggregateMerchantId;
  }

  public MerchantLocation parentAggregateMerchantName(String parentAggregateMerchantName) {
    this.parentAggregateMerchantName = parentAggregateMerchantName;
    return this;
  }

   /**
   * Name of the Parent Aggregate
   * @return parentAggregateMerchantName
  **/
  @ApiModelProperty(value = "Name of the Parent Aggregate")
  public String getParentAggregateMerchantName() {
    return parentAggregateMerchantName;
  }

  public void setParentAggregateMerchantName(String parentAggregateMerchantName) {
    this.parentAggregateMerchantName = parentAggregateMerchantName;
  }

  public MerchantLocation naicsCode(String naicsCode) {
    this.naicsCode = naicsCode;
    return this;
  }

   /**
   * NAICS code
   * @return naicsCode
  **/
  @ApiModelProperty(example = "45399", value = "NAICS code")
  public String getNaicsCode() {
    return naicsCode;
  }

  public void setNaicsCode(String naicsCode) {
    this.naicsCode = naicsCode;
  }

  public MerchantLocation localFavorite(Boolean localFavorite) {
    this.localFavorite = localFavorite;
    return this;
  }

   /**
   * Indicates whether the restaurant is frequented by, and popular with, the local population.
   * @return localFavorite
  **/
  @ApiModelProperty(value = "Indicates whether the restaurant is frequented by, and popular with, the local population.")
  public Boolean getLocalFavorite() {
    return localFavorite;
  }

  public void setLocalFavorite(Boolean localFavorite) {
    this.localFavorite = localFavorite;
  }

  public MerchantLocation hiddenGeme(Boolean hiddenGeme) {
    this.hiddenGeme = hiddenGeme;
    return this;
  }

   /**
   * Those local favorites that are in a condensed trade area.
   * @return hiddenGeme
  **/
  @ApiModelProperty(value = "Those local favorites that are in a condensed trade area.")
  public Boolean getHiddenGeme() {
    return hiddenGeme;
  }

  public void setHiddenGeme(Boolean hiddenGeme) {
    this.hiddenGeme = hiddenGeme;
  }

  public MerchantLocation transactionVolumeRank(Integer transactionVolumeRank) {
    this.transactionVolumeRank = transactionVolumeRank;
    return this;
  }

   /**
   * Identifies the relative size of the merchant location based on transaction volume. Buckets of 0-99. (Compares merchants within the same industry category and country)
   * @return transactionVolumeRank
  **/
  @ApiModelProperty(example = "75", value = "Identifies the relative size of the merchant location based on transaction volume. Buckets of 0-99. (Compares merchants within the same industry category and country)")
  public Integer getTransactionVolumeRank() {
    return transactionVolumeRank;
  }

  public void setTransactionVolumeRank(Integer transactionVolumeRank) {
    this.transactionVolumeRank = transactionVolumeRank;
  }

  public MerchantLocation avgTicketSizeRank(Integer avgTicketSizeRank) {
    this.avgTicketSizeRank = avgTicketSizeRank;
    return this;
  }

   /**
   * Identifies the relative size of the merchant location based on average ticket size. Buckets of 0-99. (Compares merchants within the same industry category and country)
   * @return avgTicketSizeRank
  **/
  @ApiModelProperty(example = "64", value = "Identifies the relative size of the merchant location based on average ticket size. Buckets of 0-99. (Compares merchants within the same industry category and country)")
  public Integer getAvgTicketSizeRank() {
    return avgTicketSizeRank;
  }

  public void setAvgTicketSizeRank(Integer avgTicketSizeRank) {
    this.avgTicketSizeRank = avgTicketSizeRank;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantLocation merchantLocation = (MerchantLocation) o;
    return Objects.equals(this.merchantLocationId, merchantLocation.merchantLocationId) &&
        Objects.equals(this.merchantName, merchantLocation.merchantName) &&
        Objects.equals(this.cleansedMerchantName, merchantLocation.cleansedMerchantName) &&
        Objects.equals(this.streetAddr, merchantLocation.streetAddr) &&
        Objects.equals(this.cleansedStreetAddr, merchantLocation.cleansedStreetAddr) &&
        Objects.equals(this.cityName, merchantLocation.cityName) &&
        Objects.equals(this.cleansedCityName, merchantLocation.cleansedCityName) &&
        Objects.equals(this.stateName, merchantLocation.stateName) &&
        Objects.equals(this.cleansedStateName, merchantLocation.cleansedStateName) &&
        Objects.equals(this.postalCode, merchantLocation.postalCode) &&
        Objects.equals(this.cleansedPostalCode, merchantLocation.cleansedPostalCode) &&
        Objects.equals(this.countryCode, merchantLocation.countryCode) &&
        Objects.equals(this.cleansedCountryCode, merchantLocation.cleansedCountryCode) &&
        Objects.equals(this.phoneNumber, merchantLocation.phoneNumber) &&
        Objects.equals(this.cleansedPhoneNumber, merchantLocation.cleansedPhoneNumber) &&
        Objects.equals(this.mccCode, merchantLocation.mccCode) &&
        Objects.equals(this.legalCorporateName, merchantLocation.legalCorporateName) &&
        Objects.equals(this.cleansedLegalCorporateName, merchantLocation.cleansedLegalCorporateName) &&
        Objects.equals(this.industry, merchantLocation.industry) &&
        Objects.equals(this.superIndustry, merchantLocation.superIndustry) &&
        Objects.equals(this.dunAndBradstreetNumber, merchantLocation.dunAndBradstreetNumber) &&
        Objects.equals(this.dateEstablished, merchantLocation.dateEstablished) &&
        Objects.equals(this.terminationDateWithMC, merchantLocation.terminationDateWithMC) &&
        Objects.equals(this.newBusinessFlag, merchantLocation.newBusinessFlag) &&
        Objects.equals(this.aggregateMerchantId, merchantLocation.aggregateMerchantId) &&
        Objects.equals(this.aggregateMerchantName, merchantLocation.aggregateMerchantName) &&
        Objects.equals(this.keyAggregateMerchantID, merchantLocation.keyAggregateMerchantID) &&
        Objects.equals(this.parentAggregateMerchantId, merchantLocation.parentAggregateMerchantId) &&
        Objects.equals(this.parentAggregateMerchantName, merchantLocation.parentAggregateMerchantName) &&
        Objects.equals(this.naicsCode, merchantLocation.naicsCode) &&
        Objects.equals(this.localFavorite, merchantLocation.localFavorite) &&
        Objects.equals(this.hiddenGeme, merchantLocation.hiddenGeme) &&
        Objects.equals(this.transactionVolumeRank, merchantLocation.transactionVolumeRank) &&
        Objects.equals(this.avgTicketSizeRank, merchantLocation.avgTicketSizeRank);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantLocationId, merchantName, cleansedMerchantName, streetAddr, cleansedStreetAddr, cityName, cleansedCityName, stateName, cleansedStateName, postalCode, cleansedPostalCode, countryCode, cleansedCountryCode, phoneNumber, cleansedPhoneNumber, mccCode, legalCorporateName, cleansedLegalCorporateName, industry, superIndustry, dunAndBradstreetNumber, dateEstablished, terminationDateWithMC, newBusinessFlag, aggregateMerchantId, aggregateMerchantName, keyAggregateMerchantID, parentAggregateMerchantId, parentAggregateMerchantName, naicsCode, localFavorite, hiddenGeme, transactionVolumeRank, avgTicketSizeRank);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantLocation {\n");
    
    sb.append("    merchantLocationId: ").append(toIndentedString(merchantLocationId)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    cleansedMerchantName: ").append(toIndentedString(cleansedMerchantName)).append("\n");
    sb.append("    streetAddr: ").append(toIndentedString(streetAddr)).append("\n");
    sb.append("    cleansedStreetAddr: ").append(toIndentedString(cleansedStreetAddr)).append("\n");
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    cleansedCityName: ").append(toIndentedString(cleansedCityName)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("    cleansedStateName: ").append(toIndentedString(cleansedStateName)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    cleansedPostalCode: ").append(toIndentedString(cleansedPostalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    cleansedCountryCode: ").append(toIndentedString(cleansedCountryCode)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    cleansedPhoneNumber: ").append(toIndentedString(cleansedPhoneNumber)).append("\n");
    sb.append("    mccCode: ").append(toIndentedString(mccCode)).append("\n");
    sb.append("    legalCorporateName: ").append(toIndentedString(legalCorporateName)).append("\n");
    sb.append("    cleansedLegalCorporateName: ").append(toIndentedString(cleansedLegalCorporateName)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    superIndustry: ").append(toIndentedString(superIndustry)).append("\n");
    sb.append("    dunAndBradstreetNumber: ").append(toIndentedString(dunAndBradstreetNumber)).append("\n");
    sb.append("    dateEstablished: ").append(toIndentedString(dateEstablished)).append("\n");
    sb.append("    terminationDateWithMC: ").append(toIndentedString(terminationDateWithMC)).append("\n");
    sb.append("    newBusinessFlag: ").append(toIndentedString(newBusinessFlag)).append("\n");
    sb.append("    aggregateMerchantId: ").append(toIndentedString(aggregateMerchantId)).append("\n");
    sb.append("    aggregateMerchantName: ").append(toIndentedString(aggregateMerchantName)).append("\n");
    sb.append("    keyAggregateMerchantID: ").append(toIndentedString(keyAggregateMerchantID)).append("\n");
    sb.append("    parentAggregateMerchantId: ").append(toIndentedString(parentAggregateMerchantId)).append("\n");
    sb.append("    parentAggregateMerchantName: ").append(toIndentedString(parentAggregateMerchantName)).append("\n");
    sb.append("    naicsCode: ").append(toIndentedString(naicsCode)).append("\n");
    sb.append("    localFavorite: ").append(toIndentedString(localFavorite)).append("\n");
    sb.append("    hiddenGeme: ").append(toIndentedString(hiddenGeme)).append("\n");
    sb.append("    transactionVolumeRank: ").append(toIndentedString(transactionVolumeRank)).append("\n");
    sb.append("    avgTicketSizeRank: ").append(toIndentedString(avgTicketSizeRank)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

