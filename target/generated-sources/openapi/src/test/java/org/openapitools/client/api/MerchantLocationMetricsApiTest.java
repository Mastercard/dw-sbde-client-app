/*
 * Small Business Decision Enhancer API
 * API for retrieving small business performance metrics such as daily, weekly, monthly and yearly metrics. These metrics detail information such as the number of transactions, amount spent and the breakdown of types of transactions at these locations.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import java.time.LocalDate;
import org.openapitools.client.model.MerchantLocationDailyMetrics;
import org.openapitools.client.model.MerchantLocationMonthlyMetrics;
import org.openapitools.client.model.MerchantLocationWeeklyMetrics;
import org.openapitools.client.model.MerchantLocationYearlyMetrics;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantLocationMetricsApi
 */
@Ignore
public class MerchantLocationMetricsApiTest {

    private final MerchantLocationMetricsApi api = new MerchantLocationMetricsApi();

    
    /**
     * Get merchant daily metrics by merchant_location_id
     *
     * Returns the daily metrics for a location using the locations merchant_location_id. The results are configurable by page size (limit), offset and sorted by +period for ascending or -period for descending. The window size for retrieving results is also configurable by setting the initial date (from_date) as well as the last date (to_date).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantLocationDailyMetricsByMerchantLocationIdTest() throws ApiException {
        Long merchantLocationId = null;
        LocalDate fromDate = null;
        LocalDate toDate = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        MerchantLocationDailyMetrics response = api.getMerchantLocationDailyMetricsByMerchantLocationId(merchantLocationId, fromDate, toDate, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * Get monthly metrics for a location by merchant_location_id
     *
     * Returns the monthly metrics for a location using the locations merchant_location_id. The results are configurable by page size (limit), offset and sorted by +period for ascending or -period for descending. The window size for retrieving results is also configurable by setting the initial date (from_date) as well as the last date (to_date).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantLocationMonthlyMetricsByMerchantLocationIdTest() throws ApiException {
        Long merchantLocationId = null;
        LocalDate fromDate = null;
        LocalDate toDate = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        MerchantLocationMonthlyMetrics response = api.getMerchantLocationMonthlyMetricsByMerchantLocationId(merchantLocationId, fromDate, toDate, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * Get weekly metrics for a location by merchant_location_id
     *
     * Returns the weekly metrics for a location using the locations merchant_location_id. The results are configurable by page size (limit), offset and sorted by +period for ascending or -period for descending. The window size for retrieving results is also configurable by setting the initial date (from_date) as well as the last date (to_date).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantLocationWeeklyMetricsByMerchantLocationIdTest() throws ApiException {
        Long merchantLocationId = null;
        LocalDate fromDate = null;
        LocalDate toDate = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        MerchantLocationWeeklyMetrics response = api.getMerchantLocationWeeklyMetricsByMerchantLocationId(merchantLocationId, fromDate, toDate, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * Get yearly metrics for a location by merchant_location_id
     *
     * Returns the yearly metrics for a location using the locations merchant_location_id. The results are configurable by page size (limit), offset and sorted by +period for ascending or -period for descending. The window size for retrieving results is also configurable by setting the initial date (from_date) as well as the last date (to_date).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantLocationYearlyMetricsByMerchantLocationIdTest() throws ApiException {
        Long merchantLocationId = null;
        LocalDate fromDate = null;
        LocalDate toDate = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        MerchantLocationYearlyMetrics response = api.getMerchantLocationYearlyMetricsByMerchantLocationId(merchantLocationId, fromDate, toDate, limit, offset, sort);

        // TODO: test validations
    }
    
}
